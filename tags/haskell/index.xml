<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>haskell on Yan Han&#39;s blog</title>
    <link>https://yanhan.github.io/tags/haskell/</link>
    <description>Recent content in haskell on yanhan.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Copyright 2013 Yan Han Pang | Vitae theme for Hugo</copyright>
    <lastBuildDate>Sat, 09 Dec 2017 13:52:00 +0000</lastBuildDate>
    
    <atom:link href="https://yanhan.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Haskell deep dive: zsh-git-prompt</title>
      <link>https://yanhan.github.io/posts/haskell-deep-dive-zsh-git-prompt/</link>
      <pubDate>Sat, 09 Dec 2017 13:52:00 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/haskell-deep-dive-zsh-git-prompt/</guid>
      <description>
      
      In How To Become A Hacker, Eric S. Raymond gives the following golden advice:
 Learning to program is like learning to w...
      
      </description>
    </item>
    <item>
      <title>Haskell: demystifying composing compose with compose</title>
      <link>https://yanhan.github.io/posts/2017-08-10-haskell-demystifying-composing-compose-with-compose/</link>
      <pubDate>Thu, 10 Aug 2017 23:05:10 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/2017-08-10-haskell-demystifying-composing-compose-with-compose/</guid>
      <description>
      
      Problem Statement Figure out the type of the following Haskell code, why it has that type, and what it does:
(.) . (.) S...
      
      </description>
    </item>
    <item>
      <title>haskell-vim-now / ghcmod-vim: Resolving &#39;ghcmod#command#type Cannot guess type&#39; errors</title>
      <link>https://yanhan.github.io/posts/2017-07-02-haskell-vim-now-ghcmod-vim-resolving-ghcmod-command-type-cannot-guess-type-errors/</link>
      <pubDate>Sun, 02 Jul 2017 10:14:05 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/2017-07-02-haskell-vim-now-ghcmod-vim-resolving-ghcmod-command-type-cannot-guess-type-errors/</guid>
      <description>
      
      NOTE: This post features a very hacky way to work around things which will likely never be merged into the ghcmod-vim pr...
      
      </description>
    </item>
    <item>
      <title>How to solve &#34;cabal: Codec.Compression.Zlib: premature end of compressed stream&#34; - the easy but time consuming way</title>
      <link>https://yanhan.github.io/posts/2014-03-04-how-to-solve-cabal-codec-compression-zlib-premature-end-of-compressed-stream-the-easy-but-time-consuming-way/</link>
      <pubDate>Tue, 04 Mar 2014 21:00:00 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/2014-03-04-how-to-solve-cabal-codec-compression-zlib-premature-end-of-compressed-stream-the-easy-but-time-consuming-way/</guid>
      <description>
      
      TLDR If you are already extremely frustrated by this problem, the solution is just:
cd ~/.cabal/packages/hackage.haskell...
      
      </description>
    </item>
    <item>
      <title>cabal - installing test dependencies</title>
      <link>https://yanhan.github.io/posts/2013-12-22-cabal-installing-test-dependencies/</link>
      <pubDate>Sun, 22 Dec 2013 11:05:00 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/2013-12-22-cabal-installing-test-dependencies/</guid>
      <description>
      
      Update Dec 2017: Dear reader, this post was written in a time when Stack did not exist and Haskell users had to deal wit...
      
      </description>
    </item>
    <item>
      <title>Using cabal sandbox libraries</title>
      <link>https://yanhan.github.io/posts/2013-11-30-using-cabal-sandbox-libraries/</link>
      <pubDate>Sat, 30 Nov 2013 23:58:00 +0000</pubDate>
      
      <guid>https://yanhan.github.io/posts/2013-11-30-using-cabal-sandbox-libraries/</guid>
      <description>
      
      Update Dec 2017: Dear reader, this post was written in a time when Stack did not exist and Haskell users had to deal wit...
      
      </description>
    </item>
    
  </channel>
</rss>
